# MongoDB Wire Protocol Subchapter Makefile
# Demonstrates MongoDB wire protocol, operations, and cluster management

.PHONY: all test clean protocol operations diagrams dependencies

# Check dependencies (TCP must exist)
dependencies:
	@echo "üîç Checking MongoDB dependencies..."
	@if [ ! -f "../../01-core-internet-networking/1.3-tcp/Makefile" ]; then \
		echo "‚ùå TCP dependency missing"; exit 1; \
	fi
	@echo "‚úÖ Dependencies satisfied: TCP"

# Run MongoDB wire protocol simulation
protocol:
	@echo "üçÉ Running MongoDB wire protocol simulation..."
	@python3 mongodb_wire_protocol.py

# Run MongoDB operations demonstration
operations:
	@echo "üìä Running MongoDB operations demonstration..."
	@python3 mongodb_operations.py

# Generate MongoDB protocol diagrams
diagrams:
	@echo "üé® Generating MongoDB protocol diagrams..."
	@python3 render_diagram.py

# Run all MongoDB demonstrations
all: dependencies protocol operations diagrams
	@echo ""
	@echo "=== MongoDB Wire Protocol Subchapter Complete ==="
	@echo "‚úÖ Wire protocol operations demonstrated"
	@echo "‚úÖ Advanced operations and clustering shown"
	@echo "‚úÖ Visual diagrams generated"
	@echo "üçÉ MongoDB enables scalable document database operations"

# Test all components
test: all
	@echo "üß™ Testing MongoDB components..."
	@python3 -c "\
import sys; \
sys.path.append('.'); \
from mongodb_wire_protocol import MongoWireProtocol; \
from mongodb_operations import MongoAggregationPipeline, MongoReplicaSet, MongoShardedCluster; \
mongo_protocol = MongoWireProtocol(); \
results = mongo_protocol.demonstrate_operations(); \
assert 'authentication' in results, 'Authentication should be in results'; \
assert 'query' in results, 'Query should be in results'; \
pipeline = MongoAggregationPipeline(); \
pipeline_result = pipeline.match({'status': 'active'}).group({'_id': '$$category', 'count': {'$$sum': 1}}).execute('products'); \
assert 'results' in pipeline_result, 'Pipeline should return results'; \
replica_set = MongoReplicaSet('rs0', ['mongo1:27017', 'mongo2:27017', 'mongo3:27017']); \
cluster = MongoShardedCluster('test-cluster'); \
print('‚úÖ All MongoDB tests passed')"
	@echo "‚úÖ MongoDB wire protocol tests completed successfully"

# Clean generated files
clean:
	@echo "üßπ Cleaning MongoDB generated files..."
	@rm -f *.png
	@echo "‚úÖ Cleanup complete"
